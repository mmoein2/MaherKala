//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.SmsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageInfo", Namespace="http://schemas.datacontract.org/2004/07/SMSPanel.Domain.Models")]
    [System.SerializableAttribute()]
    public partial class MessageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActionDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FlashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.SmsService.SMSLang LangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.SmsService.SMSDirectionType MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MoneyIsRefundedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NotSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.SmsService.SMSStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TariffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActionDateTime {
            get {
                return this.ActionDateTimeField;
            }
            set {
                if ((this.ActionDateTimeField.Equals(value) != true)) {
                    this.ActionDateTimeField = value;
                    this.RaisePropertyChanged("ActionDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc {
            get {
                return this.DescField;
            }
            set {
                if ((object.ReferenceEquals(this.DescField, value) != true)) {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flash {
            get {
                return this.FlashField;
            }
            set {
                if ((this.FlashField.Equals(value) != true)) {
                    this.FlashField = value;
                    this.RaisePropertyChanged("Flash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRead {
            get {
                return this.IsReadField;
            }
            set {
                if ((this.IsReadField.Equals(value) != true)) {
                    this.IsReadField = value;
                    this.RaisePropertyChanged("IsRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.SmsService.SMSLang Lang {
            get {
                return this.LangField;
            }
            set {
                if ((this.LangField.Equals(value) != true)) {
                    this.LangField = value;
                    this.RaisePropertyChanged("Lang");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.SmsService.SMSDirectionType MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MoneyIsRefunded {
            get {
                return this.MoneyIsRefundedField;
            }
            set {
                if ((this.MoneyIsRefundedField.Equals(value) != true)) {
                    this.MoneyIsRefundedField = value;
                    this.RaisePropertyChanged("MoneyIsRefunded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NotSent {
            get {
                return this.NotSentField;
            }
            set {
                if ((this.NotSentField.Equals(value) != true)) {
                    this.NotSentField = value;
                    this.RaisePropertyChanged("NotSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pages {
            get {
                return this.PagesField;
            }
            set {
                if ((this.PagesField.Equals(value) != true)) {
                    this.PagesField = value;
                    this.RaisePropertyChanged("Pages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sent {
            get {
                return this.SentField;
            }
            set {
                if ((this.SentField.Equals(value) != true)) {
                    this.SentField = value;
                    this.RaisePropertyChanged("Sent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.SmsService.SMSStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tariff {
            get {
                return this.TariffField;
            }
            set {
                if ((this.TariffField.Equals(value) != true)) {
                    this.TariffField = value;
                    this.RaisePropertyChanged("Tariff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SMSLang", Namespace="http://schemas.datacontract.org/2004/07/SMSPanel.Common.Enums")]
    public enum SMSLang : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = -10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FA = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EN = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SMSDirectionType", Namespace="http://schemas.datacontract.org/2004/07/SMSPanel.Domain.Enums")]
    public enum SMSDirectionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = -10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        In = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Out = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Schedule = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Usance = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SMSStatus", Namespace="http://schemas.datacontract.org/2004/07/SMSPanel.Domain.Enums")]
    public enum SMSStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = -10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Illegal = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sending = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotApproved = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sent = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoCredit = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSent = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitForSend = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmsService.ISendService")]
    public interface ISendService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/SendSMS", ReplyAction="http://tempuri.org/ISendService/SendSMSResponse")]
        WebApplication1.SmsService.SendSMSResponse SendSMS(WebApplication1.SmsService.SendSMSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/SendSMS", ReplyAction="http://tempuri.org/ISendService/SendSMSResponse")]
        System.Threading.Tasks.Task<WebApplication1.SmsService.SendSMSResponse> SendSMSAsync(WebApplication1.SmsService.SendSMSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/Dummy", ReplyAction="http://tempuri.org/ISendService/DummyResponse")]
        void Dummy();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/Dummy", ReplyAction="http://tempuri.org/ISendService/DummyResponse")]
        System.Threading.Tasks.Task DummyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetCredit", ReplyAction="http://tempuri.org/ISendService/GetCreditResponse")]
        decimal GetCredit(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetCredit", ReplyAction="http://tempuri.org/ISendService/GetCreditResponse")]
        System.Threading.Tasks.Task<decimal> GetCreditAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetDeilvery", ReplyAction="http://tempuri.org/ISendService/GetDeilveryResponse")]
        int GetDeilvery(string userName, string password, long recId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetDeilvery", ReplyAction="http://tempuri.org/ISendService/GetDeilveryResponse")]
        System.Threading.Tasks.Task<int> GetDeilveryAsync(string userName, string password, long recId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetDelivery", ReplyAction="http://tempuri.org/ISendService/GetDeliveryResponse")]
        int GetDelivery(string userName, string password, long recId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetDelivery", ReplyAction="http://tempuri.org/ISendService/GetDeliveryResponse")]
        System.Threading.Tasks.Task<int> GetDeliveryAsync(string userName, string password, long recId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetMessages", ReplyAction="http://tempuri.org/ISendService/GetMessagesResponse")]
        WebApplication1.SmsService.MessageInfo[] GetMessages(string userName, string password, int messageType, string[] fromNumbers, int index, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetMessages", ReplyAction="http://tempuri.org/ISendService/GetMessagesResponse")]
        System.Threading.Tasks.Task<WebApplication1.SmsService.MessageInfo[]> GetMessagesAsync(string userName, string password, int messageType, string[] fromNumbers, int index, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetInboxCount", ReplyAction="http://tempuri.org/ISendService/GetInboxCountResponse")]
        int GetInboxCount(string userName, string password, bool isRead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetInboxCount", ReplyAction="http://tempuri.org/ISendService/GetInboxCountResponse")]
        System.Threading.Tasks.Task<int> GetInboxCountAsync(string userName, string password, bool isRead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/SendBatchSms", ReplyAction="http://tempuri.org/ISendService/SendBatchSmsResponse")]
        WebApplication1.SmsService.SendBatchSmsResponse SendBatchSms(WebApplication1.SmsService.SendBatchSmsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/SendBatchSms", ReplyAction="http://tempuri.org/ISendService/SendBatchSmsResponse")]
        System.Threading.Tasks.Task<WebApplication1.SmsService.SendBatchSmsResponse> SendBatchSmsAsync(WebApplication1.SmsService.SendBatchSmsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetBatchDelivery", ReplyAction="http://tempuri.org/ISendService/GetBatchDeliveryResponse")]
        WebApplication1.SmsService.GetBatchDeliveryResponse GetBatchDelivery(WebApplication1.SmsService.GetBatchDeliveryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetBatchDelivery", ReplyAction="http://tempuri.org/ISendService/GetBatchDeliveryResponse")]
        System.Threading.Tasks.Task<WebApplication1.SmsService.GetBatchDeliveryResponse> GetBatchDeliveryAsync(WebApplication1.SmsService.GetBatchDeliveryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetSenderNumbers", ReplyAction="http://tempuri.org/ISendService/GetSenderNumbersResponse")]
        string GetSenderNumbers(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetSenderNumbers", ReplyAction="http://tempuri.org/ISendService/GetSenderNumbersResponse")]
        System.Threading.Tasks.Task<string> GetSenderNumbersAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/SendSmsLikeToLike", ReplyAction="http://tempuri.org/ISendService/SendSmsLikeToLikeResponse")]
        WebApplication1.SmsService.SendSmsLikeToLikeResponse SendSmsLikeToLike(WebApplication1.SmsService.SendSmsLikeToLikeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/SendSmsLikeToLike", ReplyAction="http://tempuri.org/ISendService/SendSmsLikeToLikeResponse")]
        System.Threading.Tasks.Task<WebApplication1.SmsService.SendSmsLikeToLikeResponse> SendSmsLikeToLikeAsync(WebApplication1.SmsService.SendSmsLikeToLikeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetDeliveryLikeToLike", ReplyAction="http://tempuri.org/ISendService/GetDeliveryLikeToLikeResponse")]
        WebApplication1.SmsService.GetDeliveryLikeToLikeResponse GetDeliveryLikeToLike(WebApplication1.SmsService.GetDeliveryLikeToLikeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/GetDeliveryLikeToLike", ReplyAction="http://tempuri.org/ISendService/GetDeliveryLikeToLikeResponse")]
        System.Threading.Tasks.Task<WebApplication1.SmsService.GetDeliveryLikeToLikeResponse> GetDeliveryLikeToLikeAsync(WebApplication1.SmsService.GetDeliveryLikeToLikeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/ExtractTelecomBlacklistNumbers", ReplyAction="http://tempuri.org/ISendService/ExtractTelecomBlacklistNumbersResponse")]
        WebApplication1.SmsService.ExtractTelecomBlacklistNumbersResponse ExtractTelecomBlacklistNumbers(WebApplication1.SmsService.ExtractTelecomBlacklistNumbersRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/ExtractTelecomBlacklistNumbers", ReplyAction="http://tempuri.org/ISendService/ExtractTelecomBlacklistNumbersResponse")]
        System.Threading.Tasks.Task<WebApplication1.SmsService.ExtractTelecomBlacklistNumbersResponse> ExtractTelecomBlacklistNumbersAsync(WebApplication1.SmsService.ExtractTelecomBlacklistNumbersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/NumberIsInTelecomBlacklist", ReplyAction="http://tempuri.org/ISendService/NumberIsInTelecomBlacklistResponse")]
        int NumberIsInTelecomBlacklist(string userName, string password, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISendService/NumberIsInTelecomBlacklist", ReplyAction="http://tempuri.org/ISendService/NumberIsInTelecomBlacklistResponse")]
        System.Threading.Tasks.Task<int> NumberIsInTelecomBlacklistAsync(string userName, string password, string number);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSMS", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSMSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fromNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] toNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string messageContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public bool isFlash;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public long[] recId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public byte[] status;
        
        public SendSMSRequest() {
        }
        
        public SendSMSRequest(string userName, string password, string fromNumber, string[] toNumbers, string messageContent, bool isFlash, long[] recId, byte[] status) {
            this.userName = userName;
            this.password = password;
            this.fromNumber = fromNumber;
            this.toNumbers = toNumbers;
            this.messageContent = messageContent;
            this.isFlash = isFlash;
            this.recId = recId;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSMSResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSMSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int SendSMSResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long[] recId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public byte[] status;
        
        public SendSMSResponse() {
        }
        
        public SendSMSResponse(int SendSMSResult, long[] recId, byte[] status) {
            this.SendSMSResult = SendSMSResult;
            this.recId = recId;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendBatchSms", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendBatchSmsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fromNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] toNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string messageContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public bool isFlash;
        
        public SendBatchSmsRequest() {
        }
        
        public SendBatchSmsRequest(string userName, string password, string fromNumber, string[] toNumbers, string messageContent, bool isFlash) {
            this.userName = userName;
            this.password = password;
            this.fromNumber = fromNumber;
            this.toNumbers = toNumbers;
            this.messageContent = messageContent;
            this.isFlash = isFlash;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendBatchSmsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendBatchSmsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int SendBatchSmsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int batchSmsId;
        
        public SendBatchSmsResponse() {
        }
        
        public SendBatchSmsResponse(int SendBatchSmsResult, int batchSmsId) {
            this.SendBatchSmsResult = SendBatchSmsResult;
            this.batchSmsId = batchSmsId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBatchDelivery", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBatchDeliveryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int batchSmsId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int count;
        
        public GetBatchDeliveryRequest() {
        }
        
        public GetBatchDeliveryRequest(string userName, string password, int batchSmsId, int index, int count) {
            this.userName = userName;
            this.password = password;
            this.batchSmsId = batchSmsId;
            this.index = index;
            this.count = count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBatchDeliveryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBatchDeliveryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int GetBatchDeliveryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] numbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int[] deliveryStatus;
        
        public GetBatchDeliveryResponse() {
        }
        
        public GetBatchDeliveryResponse(int GetBatchDeliveryResult, string[] numbers, int[] deliveryStatus) {
            this.GetBatchDeliveryResult = GetBatchDeliveryResult;
            this.numbers = numbers;
            this.deliveryStatus = deliveryStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSmsLikeToLike", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSmsLikeToLikeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fromNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] toNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string[] messageContents;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public bool isFlash;
        
        public SendSmsLikeToLikeRequest() {
        }
        
        public SendSmsLikeToLikeRequest(string userName, string password, string fromNumber, string[] toNumbers, string[] messageContents, bool isFlash) {
            this.userName = userName;
            this.password = password;
            this.fromNumber = fromNumber;
            this.toNumbers = toNumbers;
            this.messageContents = messageContents;
            this.isFlash = isFlash;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSmsLikeToLikeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSmsLikeToLikeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int SendSmsLikeToLikeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int smsId;
        
        public SendSmsLikeToLikeResponse() {
        }
        
        public SendSmsLikeToLikeResponse(int SendSmsLikeToLikeResult, int smsId) {
            this.SendSmsLikeToLikeResult = SendSmsLikeToLikeResult;
            this.smsId = smsId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeliveryLikeToLike", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDeliveryLikeToLikeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int smsId;
        
        public GetDeliveryLikeToLikeRequest() {
        }
        
        public GetDeliveryLikeToLikeRequest(string userName, string password, int smsId) {
            this.userName = userName;
            this.password = password;
            this.smsId = smsId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeliveryLikeToLikeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDeliveryLikeToLikeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int GetDeliveryLikeToLikeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] numbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int[] deliveryStatus;
        
        public GetDeliveryLikeToLikeResponse() {
        }
        
        public GetDeliveryLikeToLikeResponse(int GetDeliveryLikeToLikeResult, string[] numbers, int[] deliveryStatus) {
            this.GetDeliveryLikeToLikeResult = GetDeliveryLikeToLikeResult;
            this.numbers = numbers;
            this.deliveryStatus = deliveryStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExtractTelecomBlacklistNumbers", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExtractTelecomBlacklistNumbersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string numbers;
        
        public ExtractTelecomBlacklistNumbersRequest() {
        }
        
        public ExtractTelecomBlacklistNumbersRequest(string userName, string password, string numbers) {
            this.userName = userName;
            this.password = password;
            this.numbers = numbers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExtractTelecomBlacklistNumbersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExtractTelecomBlacklistNumbersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int ExtractTelecomBlacklistNumbersResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] blacklistNumbers;
        
        public ExtractTelecomBlacklistNumbersResponse() {
        }
        
        public ExtractTelecomBlacklistNumbersResponse(int ExtractTelecomBlacklistNumbersResult, string[] blacklistNumbers) {
            this.ExtractTelecomBlacklistNumbersResult = ExtractTelecomBlacklistNumbersResult;
            this.blacklistNumbers = blacklistNumbers;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISendServiceChannel : WebApplication1.SmsService.ISendService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendServiceClient : System.ServiceModel.ClientBase<WebApplication1.SmsService.ISendService>, WebApplication1.SmsService.ISendService {
        
        public SendServiceClient() {
        }
        
        public SendServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SendServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.SmsService.SendSMSResponse WebApplication1.SmsService.ISendService.SendSMS(WebApplication1.SmsService.SendSMSRequest request) {
            return base.Channel.SendSMS(request);
        }
        
        public int SendSMS(string userName, string password, string fromNumber, string[] toNumbers, string messageContent, bool isFlash, ref long[] recId, ref byte[] status) {
            WebApplication1.SmsService.SendSMSRequest inValue = new WebApplication1.SmsService.SendSMSRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.fromNumber = fromNumber;
            inValue.toNumbers = toNumbers;
            inValue.messageContent = messageContent;
            inValue.isFlash = isFlash;
            inValue.recId = recId;
            inValue.status = status;
            WebApplication1.SmsService.SendSMSResponse retVal = ((WebApplication1.SmsService.ISendService)(this)).SendSMS(inValue);
            recId = retVal.recId;
            status = retVal.status;
            return retVal.SendSMSResult;
        }
        
        public System.Threading.Tasks.Task<WebApplication1.SmsService.SendSMSResponse> SendSMSAsync(WebApplication1.SmsService.SendSMSRequest request) {
            return base.Channel.SendSMSAsync(request);
        }
        
        public void Dummy() {
            base.Channel.Dummy();
        }
        
        public System.Threading.Tasks.Task DummyAsync() {
            return base.Channel.DummyAsync();
        }
        
        public decimal GetCredit(string userName, string password) {
            return base.Channel.GetCredit(userName, password);
        }
        
        public System.Threading.Tasks.Task<decimal> GetCreditAsync(string userName, string password) {
            return base.Channel.GetCreditAsync(userName, password);
        }
        
        public int GetDeilvery(string userName, string password, long recId) {
            return base.Channel.GetDeilvery(userName, password, recId);
        }
        
        public System.Threading.Tasks.Task<int> GetDeilveryAsync(string userName, string password, long recId) {
            return base.Channel.GetDeilveryAsync(userName, password, recId);
        }
        
        public int GetDelivery(string userName, string password, long recId) {
            return base.Channel.GetDelivery(userName, password, recId);
        }
        
        public System.Threading.Tasks.Task<int> GetDeliveryAsync(string userName, string password, long recId) {
            return base.Channel.GetDeliveryAsync(userName, password, recId);
        }
        
        public WebApplication1.SmsService.MessageInfo[] GetMessages(string userName, string password, int messageType, string[] fromNumbers, int index, int count) {
            return base.Channel.GetMessages(userName, password, messageType, fromNumbers, index, count);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.SmsService.MessageInfo[]> GetMessagesAsync(string userName, string password, int messageType, string[] fromNumbers, int index, int count) {
            return base.Channel.GetMessagesAsync(userName, password, messageType, fromNumbers, index, count);
        }
        
        public int GetInboxCount(string userName, string password, bool isRead) {
            return base.Channel.GetInboxCount(userName, password, isRead);
        }
        
        public System.Threading.Tasks.Task<int> GetInboxCountAsync(string userName, string password, bool isRead) {
            return base.Channel.GetInboxCountAsync(userName, password, isRead);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.SmsService.SendBatchSmsResponse WebApplication1.SmsService.ISendService.SendBatchSms(WebApplication1.SmsService.SendBatchSmsRequest request) {
            return base.Channel.SendBatchSms(request);
        }
        
        public int SendBatchSms(string userName, string password, string fromNumber, string[] toNumbers, string messageContent, bool isFlash, out int batchSmsId) {
            WebApplication1.SmsService.SendBatchSmsRequest inValue = new WebApplication1.SmsService.SendBatchSmsRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.fromNumber = fromNumber;
            inValue.toNumbers = toNumbers;
            inValue.messageContent = messageContent;
            inValue.isFlash = isFlash;
            WebApplication1.SmsService.SendBatchSmsResponse retVal = ((WebApplication1.SmsService.ISendService)(this)).SendBatchSms(inValue);
            batchSmsId = retVal.batchSmsId;
            return retVal.SendBatchSmsResult;
        }
        
        public System.Threading.Tasks.Task<WebApplication1.SmsService.SendBatchSmsResponse> SendBatchSmsAsync(WebApplication1.SmsService.SendBatchSmsRequest request) {
            return base.Channel.SendBatchSmsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.SmsService.GetBatchDeliveryResponse WebApplication1.SmsService.ISendService.GetBatchDelivery(WebApplication1.SmsService.GetBatchDeliveryRequest request) {
            return base.Channel.GetBatchDelivery(request);
        }
        
        public int GetBatchDelivery(string userName, string password, int batchSmsId, int index, int count, out string[] numbers, out int[] deliveryStatus) {
            WebApplication1.SmsService.GetBatchDeliveryRequest inValue = new WebApplication1.SmsService.GetBatchDeliveryRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.batchSmsId = batchSmsId;
            inValue.index = index;
            inValue.count = count;
            WebApplication1.SmsService.GetBatchDeliveryResponse retVal = ((WebApplication1.SmsService.ISendService)(this)).GetBatchDelivery(inValue);
            numbers = retVal.numbers;
            deliveryStatus = retVal.deliveryStatus;
            return retVal.GetBatchDeliveryResult;
        }
        
        public System.Threading.Tasks.Task<WebApplication1.SmsService.GetBatchDeliveryResponse> GetBatchDeliveryAsync(WebApplication1.SmsService.GetBatchDeliveryRequest request) {
            return base.Channel.GetBatchDeliveryAsync(request);
        }
        
        public string GetSenderNumbers(string userName, string password) {
            return base.Channel.GetSenderNumbers(userName, password);
        }
        
        public System.Threading.Tasks.Task<string> GetSenderNumbersAsync(string userName, string password) {
            return base.Channel.GetSenderNumbersAsync(userName, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.SmsService.SendSmsLikeToLikeResponse WebApplication1.SmsService.ISendService.SendSmsLikeToLike(WebApplication1.SmsService.SendSmsLikeToLikeRequest request) {
            return base.Channel.SendSmsLikeToLike(request);
        }
        
        public int SendSmsLikeToLike(string userName, string password, string fromNumber, string[] toNumbers, string[] messageContents, bool isFlash, out int smsId) {
            WebApplication1.SmsService.SendSmsLikeToLikeRequest inValue = new WebApplication1.SmsService.SendSmsLikeToLikeRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.fromNumber = fromNumber;
            inValue.toNumbers = toNumbers;
            inValue.messageContents = messageContents;
            inValue.isFlash = isFlash;
            WebApplication1.SmsService.SendSmsLikeToLikeResponse retVal = ((WebApplication1.SmsService.ISendService)(this)).SendSmsLikeToLike(inValue);
            smsId = retVal.smsId;
            return retVal.SendSmsLikeToLikeResult;
        }
        
        public System.Threading.Tasks.Task<WebApplication1.SmsService.SendSmsLikeToLikeResponse> SendSmsLikeToLikeAsync(WebApplication1.SmsService.SendSmsLikeToLikeRequest request) {
            return base.Channel.SendSmsLikeToLikeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.SmsService.GetDeliveryLikeToLikeResponse WebApplication1.SmsService.ISendService.GetDeliveryLikeToLike(WebApplication1.SmsService.GetDeliveryLikeToLikeRequest request) {
            return base.Channel.GetDeliveryLikeToLike(request);
        }
        
        public int GetDeliveryLikeToLike(string userName, string password, int smsId, out string[] numbers, out int[] deliveryStatus) {
            WebApplication1.SmsService.GetDeliveryLikeToLikeRequest inValue = new WebApplication1.SmsService.GetDeliveryLikeToLikeRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.smsId = smsId;
            WebApplication1.SmsService.GetDeliveryLikeToLikeResponse retVal = ((WebApplication1.SmsService.ISendService)(this)).GetDeliveryLikeToLike(inValue);
            numbers = retVal.numbers;
            deliveryStatus = retVal.deliveryStatus;
            return retVal.GetDeliveryLikeToLikeResult;
        }
        
        public System.Threading.Tasks.Task<WebApplication1.SmsService.GetDeliveryLikeToLikeResponse> GetDeliveryLikeToLikeAsync(WebApplication1.SmsService.GetDeliveryLikeToLikeRequest request) {
            return base.Channel.GetDeliveryLikeToLikeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.SmsService.ExtractTelecomBlacklistNumbersResponse WebApplication1.SmsService.ISendService.ExtractTelecomBlacklistNumbers(WebApplication1.SmsService.ExtractTelecomBlacklistNumbersRequest request) {
            return base.Channel.ExtractTelecomBlacklistNumbers(request);
        }
        
        public int ExtractTelecomBlacklistNumbers(string userName, string password, string numbers, out string[] blacklistNumbers) {
            WebApplication1.SmsService.ExtractTelecomBlacklistNumbersRequest inValue = new WebApplication1.SmsService.ExtractTelecomBlacklistNumbersRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.numbers = numbers;
            WebApplication1.SmsService.ExtractTelecomBlacklistNumbersResponse retVal = ((WebApplication1.SmsService.ISendService)(this)).ExtractTelecomBlacklistNumbers(inValue);
            blacklistNumbers = retVal.blacklistNumbers;
            return retVal.ExtractTelecomBlacklistNumbersResult;
        }
        
        public System.Threading.Tasks.Task<WebApplication1.SmsService.ExtractTelecomBlacklistNumbersResponse> ExtractTelecomBlacklistNumbersAsync(WebApplication1.SmsService.ExtractTelecomBlacklistNumbersRequest request) {
            return base.Channel.ExtractTelecomBlacklistNumbersAsync(request);
        }
        
        public int NumberIsInTelecomBlacklist(string userName, string password, string number) {
            return base.Channel.NumberIsInTelecomBlacklist(userName, password, number);
        }
        
        public System.Threading.Tasks.Task<int> NumberIsInTelecomBlacklistAsync(string userName, string password, string number) {
            return base.Channel.NumberIsInTelecomBlacklistAsync(userName, password, number);
        }
    }
}
